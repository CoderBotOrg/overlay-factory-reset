#!/bin/bash
#before this run backup boot to backup it in the overlay and then put in the rom
#after this create_overlay

usage() {
	echo "merge_overlay [overlay_mount_point] [rom_mount_point]"
	echo "merges upper filesystem with lower, then empty upper fs with create_overlay"
	exit 2
}

fail(){
	echo $1
	exit 1
}

[[ $1 == "-h" || $1 == "--help" ]] && usage

CONF=${CONF:-/etc/coderbot/init_overlay.conf}
source $CONF #||  fail "ERROR: file not found CONF_FILE: $CONF"

OVERMPOINT=${OVERMPOINT:-$1}
ROMMPOINT=${ROMMPOINT:-$2}
REOPTS="rw,remount,rw"
UPPERDIR=${UPPERDIR:-upper}

[ -d $OVERMPOINT ] || fail "ERROR: OVERMPOINT $OVERMPOINT directory not faound"
[ -d $ROMMPOINT ] || fail "ERROR: ROMMPOINT $ROMMPOINT directory not faound"

mount -o $REOPTS $ROMMPOINT || fail "ERROR: can't remount $ROMMPOINT rw"

cd "$OVERMPOINT/$UPPERDIR" || fail "ERROR: can't cd to $OVERMPOINT/$UPPERDIR, maybe not exists"
REMOVED=`find . -perm 000 -type c -exec ls -lb {} \; | perl -lane 'if($F[4] == "0" && $F[5] == "0"){$out=join(" ", @F[9..$#F]); $out =~ s/^\.\///; print $out;}'`
OPAQUE=`getfattr -dm- -R . | perl -le '$lastfile=""; while(<>){if($_ =~ m/^#.*file:/){@F = split /[ \n]/,$_; $lastfile=join "\\ ",@F[2..$#F];}else{if($_ =~ m/trusted.overlay.opaque="y"/){print $lastfile;}}}'`

#back to previous dir
cd - || fail "ERROR: can't cd to previous dir (-)"

if [ -z "$REMOVED" ]
then
	echo "Nothing to remove"
else
	while read line
	do
		rm -rf "$ROMMPOINT/$line" || fail "ERROR: can't remove $ROMMPOINT/$line"
		rm -rf "${OVERMPOINT}/${UPPERDIR}/$line" || fail "ERROR: can't remove ${OVERMPOINT}/${UPPERDIR}/$line"
	done <<< $REMOVED
fi

if [ -z "$OPAQUE" ]
then
	echo "No opaque to remove"
else
	while read oline
	do
		rm -rf "$ROMMPOINT/$oline" || fail "ERROR: can't remove $ROMMPOINT/$oline"
	done <<< $OPAQUE
fi

cp -a "${OVERMPOINT}/${UPPERDIR}/." $ROMMPOINT/ || fail "ERROR in copying files"

echo "Merged ok, now you should clear overlay and backup boot"

##delete overlay and create new one
create_overlay || fail "ERROR in creating new overlay"

#BACKUPFILE=${BACKUPFILE:-/etc/coderbot/boot.tar.xz}
#BACKUPSIG=${BACKUPSIG:-/etc/coderbot/boot.sig}
#
#[ -f $BACKUPFILE ] && mv $BACKUPFILE ${BACKUPFILE}.old || fail "ERROR: cant rename $BACKUPFILE"
#[ -f $BACKUPSIG ] && mv $BACKUPSIG ${BACKUPSIG}.old || fail "ERROR: cant rename $BACKUPSIG"
#
#restore_old_backup() {
#	[ -f  ${BACKUPFILE}.old ] && mv  ${BACKUPFILE}.old ${BACKUPFILE} || fail "ERROR: cant rename  ${BACKUPFILE}.old"
#	[ -f ${BACKUPSIG}.old ] && mv ${BACKUPSIG}.old ${BACKUPSIG} || fail "ERROR: cant rename ${BACKUPSIG}.old"
#	fail "ERROR: cant backup boot partition"
#}
#
##backup existing boot partition
#backup_boot || restore_old_backup
